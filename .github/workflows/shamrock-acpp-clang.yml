name: Acpp/clang


on:
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:


  shamrock_acpp:
    name: AdaptiveCpp clang-${{ matrix.clang }} ${{ matrix.backend }}:${{matrix.arch}}
    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.container }}

    strategy:
      matrix:
        include:
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: omp
            arch: none
            runtest: yes
            uploadartifact: yes
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: generic
            arch: none
            runtest: yes
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: cuda.explicit-multipass
            arch: sm_80
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20cuda11
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: cuda.integrated-multipass
            arch: sm_80
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20cuda11
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: hip
            arch: gfx906
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20rocm543

    timeout-minutes: 60
    steps:
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD
      #### End Checkout part ####

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: ls local
        run : ls -la

      - name: Setup env
        run : ./env/new-env --machine debian-generic.acpp --builddir build -- --backend ${{ matrix.backend }} --arch ${{ matrix.arch }}

      - name: Configure
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate && shamconfigure

      - name: Configure sham install
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate &&  \
            cmake . -DCMAKE_INSTALL_PREFIX=$(pwd)/install_test

      - name: Build & install
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate && shammake install

      - name: Pull reference files
        run: |
          cd build
          git clone https://github.com/Shamrock-code/reference-files.git

      - name: run Shamrock help
        if: matrix.runtest
        run: |
          cd build
          ./shamrock --help
          ./shamrock --help --color

      - name: run Shamrock Test help
        if: matrix.runtest
        run: |
          cd build
          ./shamrock_test --help
          ./shamrock_test --help --color

      - name: run Shamrock Unittests world_size = 1
        if: matrix.runtest
        run: |
          cd build
          ./shamrock_test --color --smi-full  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 2
        if: matrix.runtest
        run: |
          cd build
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe -n 2 ./shamrock_test --color --smi-full  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 3
        if: matrix.runtest
        run: |
          cd build
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe -n 3 ./shamrock_test --color --smi-full  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 4
        if: matrix.runtest
        run: |
          cd build
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe -n 4 ./shamrock_test --color --smi-full  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi

      - name: Try starting Shamrock (installed version)
        shell: bash # In docker container github action default to sh
        if: matrix.runtest
        run: |
          cd build/install_test/bin
          ls ..
          LD_LIBRARY_PATH=../lib:$LD_LIBRARY_PATH ./shamrock --smi --sycl-cfg 0:0
