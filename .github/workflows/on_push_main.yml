name: On Push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - release/*

  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository_owner }}

jobs:

  make_code_archive:
    runs-on: ubuntu-latest
    steps:
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name : Download git-archive-all.sh
        run: |
          wget https://raw.githubusercontent.com/fabacab/git-archive-all.sh/refs/heads/master/git-archive-all.sh
          chmod +x git-archive-all.sh

      - name : Archive Shamrock with submodules
        run: |
          ./git-archive-all.sh

      - name: Upload artifcat
        uses: actions/upload-artifact@v4
        with:
          name: Shamrock_Release.tar
          path: Shamrock.tar

  src_check:
    name: Linting
    #needs: [detect_changes]
    uses: ./.github/workflows/source_checks.yml

  #make shamrock documentation
  make_documentation:
    name: Doc
    needs: [src_check]
    uses: ./.github/workflows/make_documentation.yml

  shamrock_linux_acpp:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang.yml

  shamrock_linux_acpp_conda:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-conda.yml

  shamrock_linux_acpp_pylib:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang-py.yml


  shamrock_linux_acpp_macos:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-macos.yml

  shamrock_linux_acpp_asan:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang-asan.yml

  shamrock_linux_acpp_ubsan:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang-ubsan.yml

  shamrock_linux_acpp_tidy:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang-tidy.yml

  shamrock_linux_acpp_cov:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-acpp-clang-coverage.yml

  shamrock_linux_dpcpp:
    needs: [src_check]
    name: Tests
    uses: ./.github/workflows/shamrock-dpcpp.yml

  shamrock_linux_acpp_phystests:
    needs: [shamrock_linux_acpp]
    name: Tests (Phys)
    uses: ./.github/workflows/shamrock-acpp-phys-test.yml


  make_github_page:
    name: "GithubPage"
    needs: [make_documentation, shamrock_linux_acpp_pylib, shamrock_linux_acpp_cov]
    uses: ./.github/workflows/make_website.yml
    with:
      upload-page-artifact: true

  deploy_page:

    if: github.ref == 'refs/heads/main'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: make_github_page
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build_push_docker:
    name: Build dockerfiles
    needs: [src_check]
    uses: ./.github/workflows/build-dockerfiles.yml

  publish_release:


    runs-on: [self-hosted,  docker-runner]

    container:
      image: ghcr.io/shamrock-code/shamrock-ci:ubuntu20


    needs: [shamrock_linux_acpp_cov, make_documentation]

    if: false
    #if: github.ref == 'refs/heads/main'

    steps:

      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 'Download Doc'
        uses: actions/download-artifact@v4
        with:
          name: shamrock_documentation

      - name: 'Download coverage list'
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-list-acpp_omp_debug
          path: code-coverage-list-acpp_omp_debug

      - name: 'Download coverage report'
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report-acpp_omp_debug
          path: code-coverage-report-acpp_omp_debug


      - name: 'Tar coverage'
        run: tar -cvf coverage.tar.gz code-coverage-list-acpp_omp_debug code-coverage-report-acpp_omp_debug


      - name: ls local
        run : ls -la

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Current Build"
          files: |
            LICENSE
            documentation.tar.gz
            coverage.tar.gz
