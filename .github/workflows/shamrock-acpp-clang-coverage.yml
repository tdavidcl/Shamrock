name: Acpp/clang (Coverage)


on:
  workflow_call:


jobs:

  shamrock_acpp_omp_debug_coverage:
    name: AdaptiveCpp coverage omp clang-${{ matrix.clang }}
    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.container }}

    strategy:
      matrix:
        include:
          - clang: 18
            cuda: 11.0.2
            rocm: 5.4.3
            container: ghcr.io/shamrock-code/shamrock-ci:ubuntu20

    steps:
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD
      #### End Checkout part ####

      - name: ls local
        run : ls -la

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi


      - name: configure Shamrock
        run: |
          ./env/new-env --machine debian-generic.acpp --builddir acpp_omp_debug --type coverage -- --backend omp

      - name: Configure
        shell: bash # In docker container github action default to sh
        run: |
          cd acpp_omp_debug
          source ./activate && shamconfigure

      - name: Build
        shell: bash # In docker container github action default to sh
        run: |
          cd acpp_omp_debug
          source ./activate && shammake

      - name: Pull reference files
        run: |
          cd acpp_omp_debug
          git clone https://github.com/Shamrock-code/reference-files.git

      - name: run Shamrock Unittests world_size = 1
        run: |
          cd acpp_omp_debug
          LLVM_PROFILE_FILE="utests_0_0.profraw" ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 2
        run: |
          cd acpp_omp_debug
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_0.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_1.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 3
        run: |
          cd acpp_omp_debug
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_0.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_1.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_2.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 4
        run: |
          cd acpp_omp_debug
          mpirun --allow-run-as-root --bind-to socket:overload-allowed --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_0.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_1.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_2.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_3.profraw ./shamrock_test --smi-full --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: merge coverage reports
        run: |
          cd acpp_omp_debug
          ls -la
          llvm-profdata-${{matrix.clang}} merge -sparse utests_* -o utests.profdata

      - name: make coverage reports
        run: |
          cd acpp_omp_debug
          llvm-cov-${{matrix.clang}} report shamrock_test -instr-profile=utests.profdata \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"\
               > coverage_list.txt
          llvm-cov-${{matrix.clang}} show shamrock_test -instr-profile=utests.profdata -format=html -output-dir=out_cov\
              -Xdemangler c++filt -Xdemangler -n \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"

      - name: print coverage
        run: |
          cd acpp_omp_debug
          llvm-cov-${{matrix.clang}} report shamrock_test -instr-profile=utests.profdata \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"\

      - name: Archive code coverage results 1
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-list-acpp_omp_debug
          path: acpp_omp_debug/coverage_list.txt

      - name: Archive code coverage results 2
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-acpp_omp_debug
          path: acpp_omp_debug/out_cov/
